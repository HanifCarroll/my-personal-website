---
import { Image } from 'astro:assets';
import GithubWhite from '@src/assets/img/github-mark-white.svg';
import GithubBlack from '@src/assets/img/github-mark.svg';
import LinkedInWhite from '@src/assets/img/linkedin-white.svg';
import LinkedInBlack from '@src/assets/img/linkedin.svg';
import AvaLogo from '@src/assets/img/small-ava.jpeg';
import HeaderLink from './HeaderLink.astro';

const menu = [
	{
		link: '/about/',
		label: 'About'
	},
	{
		link: '/posts/',
		label: 'Posts'
	},
	{
		link: '/photos/',
		label: 'Photos'
	},
	{
		link: '/projects/',
		label: 'Projects'
	}
];
---

<header id='site-header' class:list={['flex items-center w-full transition duration-300 z-[999] border-[var(--soft-border-color)]']}>
	<div class='container'>
		<nav class='flex gap-4 items-center justify-between py-3'>
			<h2 class='m-0'>
				<a href='/' class='flex gap-4 items-center text-xl font-black uppercase'>
					<Image src={AvaLogo} alt='Your site name' class='rounded-full w-11 border-white border-2 shadow-lg' />
					Hanif Carroll
				</a>
			</h2>
			<div class='flex'>
				<a class='p-3 dark:hidden' href='https://www.linkedin.com/in/hanifcarroll/' target='_blank'
					><Image src={LinkedInBlack} width={25} height={25} alt='LinkedIn logo' /></a
				>
				<a class='p-3 hidden dark:block' href='https://www.linkedin.com/in/hanifcarroll/' target='_blank'
					><Image src={LinkedInWhite} width={24} height={24} alt='LinkedIn logo' /></a
				>
				<a class='p-3 dark:hidden' href='https://github.com/HanifCarroll' target='_blank'
					><Image src={GithubBlack} width={24} height={24} alt='Github logo' /></a
				>
				<a class='p-3 hidden dark:block' href='https://github.com/HanifCarroll' target='_blank'
					><Image src={GithubWhite} width={24} height={24} alt='Github logo' /></a
				>
				<button class='p-3' id='themeToggle' aria-label='Theme mode'>
					<svg
						class='sun'
						xmlns='http://www.w3.org/2000/svg'
						width='24'
						height='24'
						viewBox='0 0 24 24'
						fill='none'
						stroke='currentColor'
						stroke-width='2'
						stroke-linecap='round'
						stroke-linejoin='round'
						class='lucide lucide-sun'
						><circle cx='12' cy='12' r='4'></circle><path d='M12 2v2'></path><path d='M12 20v2'></path><path d='m4.93 4.93 1.41 1.41'
						></path><path d='m17.66 17.66 1.41 1.41'></path><path d='M2 12h2'></path><path d='M20 12h2'></path><path
							d='m6.34 17.66-1.41 1.41'></path><path d='m19.07 4.93-1.41 1.41'></path></svg
					>
					<svg
						class='moon'
						xmlns='http://www.w3.org/2000/svg'
						width='24'
						height='24'
						viewBox='0 0 24 24'
						fill='none'
						stroke='currentColor'
						stroke-width='2'
						stroke-linecap='round'
						stroke-linejoin='round'
						class='lucide lucide-moon'
					>
						<path d='M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z'></path></svg
					>
				</button>
			</div>
		</nav>
		<div id="menu-container" class='fixed top-3 w-auto max-w-full px-3 left-1/2 -translate-x-1/2 z-[999] transition-all duration-300'>
			<div id="menu-content" class='flex px-2.5 bg-white/90 dark:bg-zinc-900/75 backdrop-blur-md leading-tight rounded-full border dark:border-zinc-700'>
				<div class='px-2.5 text-sm'>
					<HeaderLink class='py-3 flex items-center' href='/' aria-label='Home'>
							<!-- ... existing home icon ... -->
					</HeaderLink>
				</div>
				{
					menu.map((item) => (
						<div class='px-2.5 text-sm'>
								<HeaderLink class='py-3 flex items-center' href={item.link}>
									{item.label}
								</HeaderLink>
						</div>
					))
				}
			</div>
		</div>
	</div>

	<style>
		#menu-container {
			transition: transform 0.3s ease;
		}
	</style>

	<script>
		let lastScrollTop = 0;
		let timeoutId: NodeJS.Timeout | null = null;
		let isHovering = false;
		const menuContainer = document.getElementById('menu-container');

		function hideMenu() {
			if (!isHovering && menuContainer) {
				menuContainer.style.transform = 'translate(-50%, -100%)';
			}
		}
		function showMenu() {
			if (menuContainer) {
				menuContainer.style.transform = 'translate(-50%, 0)';
			}
			
			if (timeoutId) {
				clearTimeout(timeoutId);
			}
			
			timeoutId = setTimeout(hideMenu, 3000);
		}

		function handleScroll() {
			const scrollTop = window.scrollY || document.documentElement.scrollTop;
			
			if (scrollTop > lastScrollTop) {
				hideMenu();
			} else {
				showMenu();
			}

			lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
		}

		menuContainer?.addEventListener('mouseenter', () => {
			isHovering = true;
			showMenu();
		});

		menuContainer?.addEventListener('mouseleave', () => {
			isHovering = false;
			timeoutId = setTimeout(hideMenu, 3000);
		});

		window.addEventListener('scroll', handleScroll, { passive: true });

		// Initially show the menu
		showMenu();
	</script>
</header>
